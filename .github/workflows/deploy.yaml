name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: construct-backend
  SHORT_SHA: ${{ github.sha }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SSH_USER: ${{ secrets.SSH_USER }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get short SHA
      id: sha
      run: echo "short_sha=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_OUTPUT
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.sha.outputs.short_sha }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Setup SSH context
        uses: appleboy/ssh-action@v1 
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ~/app
            cd ~/app

      - name: Prepare deployment files
        run: |
          # Генерация .env файла
          echo "SHORT_SHA=${{ needs.build-and-push.outputs.short_sha }}" > .env
          echo "DOCKERHUB_USERNAME=${{ vars.DOCKERHUB_USERNAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}" >> .env
          echo "JWT_ACCESS_EXPIRE=${{ secrets.JWT_ACCESS_EXPIRE }}" >> .env
          echo "REFRESH_EXPIRE=${{ secrets.REFRESH_EXPIRE }}" >> .env
          echo "JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}" >> .env

          # Копирование docker-compose
          cp docker-compose.prod.yml deploy-compose.yml

      - name: Copy files to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".env,deploy-compose.yml"
          target: "~/app"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin
            docker compose -p fastapi-app -f deploy-compose.yml --env-file .env down
            docker compose -p fastapi-app -f deploy-compose.yml --env-file .env up -d --pull always

